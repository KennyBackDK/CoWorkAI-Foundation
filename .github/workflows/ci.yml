name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    if: ${{ hashFiles('**/*.xcodeproj','**/*.xcworkspace') != '' }}
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v5

      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode.app"

      - name: Discover Xcode project & scheme
        id: probe
        run: |
          set -euo pipefail
          # foretræk din mappe, men fald tilbage til første .xcodeproj hvor som helst
          PROJ="$(git ls-files 'CoWorkerAI/*.xcodeproj' | head -n1 || true)"
          if [ -z "$PROJ" ]; then PROJ="$(git ls-files '*.xcodeproj' | head -n1 || true)"; fi
          if [ -z "$PROJ" ]; then echo "No .xcodeproj found in repo"; exit 1; fi
          echo "Found project: $PROJ"
          echo "project=$PROJ" >> "$GITHUB_OUTPUT"
          echo "scheme=CoWorkerAI" >> "$GITHUB_OUTPUT"
          echo "Tree around project:"; ls -R "$(dirname "$PROJ")" | sed 's/^/  /'

      - name: Verify scheme is Shared & bundle id
        run: |
          set -euo pipefail
          PROJ="${{ steps.probe.outputs.project }}"
          SCHEME="${{ steps.probe.outputs.scheme }}"

          # 1) shared scheme?
          if [ ! -f "$PROJ/xcshareddata/xcschemes/$SCHEME.xcscheme" ]; then
            echo "Shared scheme missing: $PROJ/xcshareddata/xcschemes/$SCHEME.xcscheme"
            echo "Available schemes:"
            xcodebuild -project "$PROJ" -list
            exit 1
          fi
          echo "✓ Shared scheme OK"

          # 2) bundle id?
          BID="$(xcodebuild -project "$PROJ" -showBuildSettings -scheme "$SCHEME" -destination 'platform=macOS' 2>/dev/null \
                 | sed -n 's/^[[:space:]]*PRODUCT_BUNDLE_IDENTIFIER = \(.*\)$/\1/p' | tail -n1)"
          echo "Bundle id: $BID"
          test "$BID" = "com.kennyback.coworkerai" || { echo "Bundle id must be com.kennyback.coworkerai"; exit 1; }

      - name: Resolve SPM
        run: xcodebuild -project "${{ steps.probe.outputs.project }}" -resolvePackageDependencies -scheme "${{ steps.probe.outputs.scheme }}"

      - name: Build (macOS, no signing)
        run: xcodebuild -project "${{ steps.probe.outputs.project }}" -scheme "${{ steps.probe.outputs.scheme }}" -destination 'platform=macOS' CODE_SIGNING_ALLOWED=NO

  no-project-yet:
    if: ${{ hashFiles('**/*.xcodeproj','**/*.xcworkspace') == '' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "No Xcode project yet; skipping CI."
