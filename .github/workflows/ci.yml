name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v5

      # Find .xcodeproj (helst i CoWorkerAI/, ellers første i repo)
      - name: Probe Xcode project
        id: probe
        run: |
          set -euo pipefail
          PROJ="$(git ls-files 'CoWorkerAI/*.xcodeproj' | head -n1 || true)"
          if [ -z "$PROJ" ]; then PROJ="$(git ls-files '*.xcodeproj' | head -n1 || true)"; fi
          if [ -n "$PROJ" ]; then
            echo "Found project: $PROJ"
            echo "project=$PROJ" >> "$GITHUB_OUTPUT"
            echo "found=true"   >> "$GITHUB_OUTPUT"
          else
            echo "No .xcodeproj found"
            echo "found=false"  >> "$GITHUB_OUTPUT"
          fi

      - name: No project yet (skip CI)
        if: steps.probe.outputs.found != 'true'
        run: echo "No Xcode project yet; skipping CI."

      - name: Select Xcode
        if: steps.probe.outputs.found == 'true'
        run: sudo xcode-select -s "/Applications/Xcode.app"

      - name: Verify shared scheme & bundle id
        if: steps.probe.outputs.found == 'true'
        run: |
          set -euo pipefail
          PROJ="${{ steps.probe.outputs.project }}"
          SCHEME="CoWorkerAI"

          # Shared scheme?
          test -f "$PROJ/xcshareddata/xcschemes/$SCHEME.xcscheme" \
            || { echo "Shared scheme missing: $PROJ/xcshareddata/xcschemes/$SCHEME.xcscheme"; xcodebuild -project "$PROJ" -list; exit 1; }
          echo "✓ Shared scheme OK"

          # Bundle id?
          BID="$(xcodebuild -project "$PROJ" -showBuildSettings -scheme "$SCHEME" -destination 'platform=macOS' 2>/dev/null \
                 | sed -n 's/^[[:space:]]*PRODUCT_BUNDLE_IDENTIFIER = \(.*\)$/\1/p' | tail -n1)"
          echo "Bundle id: $BID"
          test "$BID" = "com.kennyback.coworkerai" || { echo "Bundle id must be com.kennyback.coworkerai"; exit 1; }

      - name: Resolve SPM
        if: steps.probe.outputs.found == 'true'
        run: xcodebuild -project "${{ steps.probe.outputs.project }}" -resolvePackageDependencies -scheme "CoWorkerAI"

      - name: Build (macOS, no signing)
        if: steps.probe.outputs.found == 'true'
        run: xcodebuild -project "${{ steps.probe.outputs.project }}" -scheme "CoWorkerAI" -destination 'platform=macOS' CODE_SIGNING_ALLOWED=NO
